<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="$(arg name)">
  <!-- robot name parameter -->
  <xacro:arg name="name" default="ur"/>
  <!-- import main macro -->
  <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>
  <xacro:include filename="$(find ur_description)/urdf/inc/ur_joint_control.xacro" />
  <!-- possible 'ur_type' values: ur3, ur3e, ur5, ur5e, ur10, ur10e, ur16e, ur20 -->
  <!-- the default value should raise an error in case this was called without defining the type -->
  <xacro:arg name="ur_type" default="ur5x"/>

  <!-- parameters -->
  <xacro:arg name="tf_prefix" default="" />
  <xacro:arg name="joint_limit_params" default="$(find ur_description)/config/$(arg ur_type)/joint_limits.yaml"/>
  <xacro:arg name="kinematics_params" default="$(find ur_description)/config/$(arg ur_type)/default_kinematics.yaml"/>
  <xacro:arg name="physical_params" default="$(find ur_description)/config/$(arg ur_type)/physical_parameters.yaml"/>
  <xacro:arg name="visual_params" default="$(find ur_description)/config/$(arg ur_type)/visual_parameters.yaml"/>
  <xacro:arg name="transmission_hw_interface" default=""/>
  <xacro:arg name="safety_limits" default="false"/>
  <xacro:arg name="safety_pos_margin" default="0.15"/>
  <xacro:arg name="safety_k_position" default="20"/>
  <xacro:arg name="simulation_controllers" default="" />

  <!-- create link fixed to the "world" -->
  <link name="world" />

  <!-- arm -->
  <xacro:ur_robot
    name="$(arg name)"
    tf_prefix="$(arg tf_prefix)"
    parent="world"
    joint_limits_parameters_file="$(arg joint_limit_params)"
    kinematics_parameters_file="$(arg kinematics_params)"
    physical_parameters_file="$(arg physical_params)"
    visual_parameters_file="$(arg visual_params)"
    safety_limits="$(arg safety_limits)"
    safety_pos_margin="$(arg safety_pos_margin)"
    safety_k_position="$(arg safety_k_position)"
    force_abs_paths="true"
    >
    <origin xyz="0 0 0" rpy="0 0 0" />          <!-- position robot in the world -->
  </xacro:ur_robot>


  <!-- START Force/torque sensor in Gazebo-->
  <!-- The F/T sensor plugin -->
  <gazebo reference="$(arg tf_prefix)wrist_3_link_ft_frame">
      <disableFixedJointLumping>true</disableFixedJointLumping> 
      <preserveFixedJoint>true</preserveFixedJoint>
          <provideFeedback>true</provideFeedback>
        <sensor name="$(arg tf_prefix)tcp_fts_sensor" type="force_torque">
        <always_on>1</always_on>
        <update_rate>100.0</update_rate>
        <visualize>true</visualize>
        <force_torque>
          <frame>child</frame>
          <measure_direction>child_to_parent</measure_direction>
        </force_torque>
        </sensor>
  </gazebo>
  <gazebo>
        <plugin name="gazebo_ros_ft_sensor" filename="libgazebo_ros_ft_sensor.so">
          <ros>
            <!-- Add namespace and remap the default topic -->
            <namespace></namespace>
            <remapping>wrench:=ft_sensor_wrench</remapping>
          </ros>
          <joint_name>$(arg tf_prefix)wrist_3_link_ft_frame</joint_name>
          <update_rate>100</update_rate>
          <gaussian_noise>0</gaussian_noise>
        </plugin>
  </gazebo>

  <!-- END force/torque sensor in Gazebo-->
 <gazebo reference="base_link">
    <self_collide>1</self_collide>
  </gazebo>
 <gazebo reference="shoulder_link">
    <self_collide>1</self_collide>
  </gazebo>
 <gazebo reference="forearm_link">
    <self_collide>1</self_collide>
  </gazebo>
   <gazebo reference="upper_arm_link">
    <self_collide>1</self_collide>
  </gazebo>
   <gazebo reference="wrist_1_link">
    <self_collide>1</self_collide>
  </gazebo>
   <gazebo reference="wrist_2_link">
    <self_collide>1</self_collide>
  </gazebo>
   <gazebo reference="wrist_3_link">
    <self_collide>1</self_collide>
  </gazebo>
  <gazebo reference="sensor_link">
    <self_collide>1</self_collide>
  </gazebo>
  <gazebo reference="world">
  </gazebo>
  
  
  <!-- Plugin Gazebo ros control--> 
  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <parameters>$(arg simulation_controllers)</parameters>
      <ros>
        <namespace></namespace>
        <remapping>motion_control_handle/target_frame:=target_frame</remapping>
        <remapping>cartesian_motion_controller/target_frame:=target_frame</remapping>
        
        <remapping>cartesian_compliance_controller/target_frame:=target_frame</remapping>
        <remapping>cartesian_compliance_controller/target_wrench:=target_wrench</remapping>
        <remapping>cartesian_compliance_controller/ft_sensor_wrench:=ft_sensor_wrench</remapping>

        <remapping>cartesian_force_controller/target_wrench:=target_wrench</remapping>
        <remapping>cartesian_force_controller/ft_sensor_wrench:=ft_sensor_wrench</remapping>
        
    </ros>
        </plugin>
  </gazebo>


  <!-- ros2 control instance -->
    <ros2_control name="$(arg name)" type="system">
        <hardware>
          <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </hardware>
        <!-- Add URDF transmission elements (for ros_control) -->
        <xacro:ur_joint_control_description
          tf_prefix="$(arg tf_prefix)"
          initial_positions="${dict(shoulder_pan_joint=0.0,shoulder_lift_joint=-1.57,elbow_joint=0.0,wrist_1_joint=-1.57,wrist_2_joint=0.0,wrist_3_joint=0.0)}"
        />

        <sensor name="$(arg tf_prefix)tcp_fts_sensor" >
          <state_interface name="force.x"/>
          <state_interface name="force.y"/>
          <state_interface name="force.z"/>
          <state_interface name="torque.x"/>
          <state_interface name="torque.y"/>
          <state_interface name="torque.z"/>
          <param name="frame_id">sensor_link</param>
        </sensor>
      </ros2_control>
</robot>